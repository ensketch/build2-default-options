# Assert that the project type is 'empty'.
# Ensketch does not allow pure package repositories.
#
--pre-hook "$options_dir$/assert-project-is-empty.sh"

# Create directory for files needed
# to set up the development environment.
#
--post-hook "mkdir .develop"
--post-hook "cp $options_dir$/init.sh .develop/init.sh"
--post-hook "$options_dir$/init.sh"

# Use Git with 'main' as default branch.
#
--vcs git,branch=main

# Use whitelisting by copying '.gitignore' template.
# Default '.gitignore' have already been cleared.
#
--post-hook "cp $options_dir$/project.gitignore .gitignore"

# Set up default Git hooks.
#
--post-hook "$options_dir$/git-hooks-setup.sh"

# Add standard 'README.md' file.
#
--post-hook "cp $options_dir$/README.md ."
--post-hook "sed -i -e 's/xxx/@name@/g' README.md"

# Copyright and License
#
--post-hook "cp $options_dir$/AUTHORS.md ."
--post-hook "sed -i -e 's/xxx/@name@/g' AUTHORS.md"
--post-hook "cp $options_dir$/COPYING.md ."
--post-hook "cp $options_dir$/license-notice.md .develop/."
--post-hook "sed -i -e 's/xxx/@name@/g' .develop/license-notice.md"

# Support Files for Source Code
#
--post-hook "cp $options_dir$/project.clang-format .clang-format"

# Set up manifest template for packages.
#
--post-hook "cp $options_dir$/project.manifest .develop/manifest"
--post-hook "sed -i -e 's/xxx/@name@/g' .develop/manifest"

# Tweak 'repositories.manifest'.
#
--post-hook "sed -i -e 's%git.build2.org/hello/libhello.git%github.com/ensketch/xstd.git%g' repositories.manifest"

# Debug Message
#
# --pre-hook "echo bdep-new-project"
